{application,unplug,
             [{config_mtime,1747356342},
              {optional_applications,[]},
              {applications,[kernel,stdlib,elixir,logger,plug]},
              {description,"A plug that can be used to conditionally invoke other plugs"},
              {modules,['Elixir.Unplug','Elixir.Unplug.Compose.All',
                        'Elixir.Unplug.Compose.Any','Elixir.Unplug.Predicate',
                        'Elixir.Unplug.Predicates.AppConfigEquals',
                        'Elixir.Unplug.Predicates.AppConfigIn',
                        'Elixir.Unplug.Predicates.AppConfigNotEquals',
                        'Elixir.Unplug.Predicates.AppConfigNotIn',
                        'Elixir.Unplug.Predicates.EnvVarEquals',
                        'Elixir.Unplug.Predicates.EnvVarIn',
                        'Elixir.Unplug.Predicates.EnvVarNotEquals',
                        'Elixir.Unplug.Predicates.EnvVarNotIn',
                        'Elixir.Unplug.Predicates.RequestHeaderEquals',
                        'Elixir.Unplug.Predicates.RequestHeaderNotEquals',
                        'Elixir.Unplug.Predicates.RequestPathEquals',
                        'Elixir.Unplug.Predicates.RequestPathIn',
                        'Elixir.Unplug.Predicates.RequestPathNotEquals',
                        'Elixir.Unplug.Predicates.RequestPathNotIn']},
              {registered,[]},
              {vsn,"1.1.0"}]}.
